services:
  postgres:
    image: postgis/postgis:16-3.4
    env_file: .env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]
    ports: ["6379:6379"]
    volumes: [ "redisdata:/data" ]

  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./backend:/var/www/html
      - .:/project
    working_dir: /var/www/html
    command:
      - sh
      - -c
      - |
        set -e
        /project/scripts/init-backend.sh
        . /project/scripts/load-backend-env.sh
        until php artisan migrate --force; do
          echo "Waiting for database..."
          sleep 5
        done
        php-fpm -F

    extra_hosts:
      - "host.docker.internal:host-gateway"

  horizon:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    env_file: .env
    depends_on: [backend, redis]
    volumes:
      - ./backend:/var/www/html
      - .:/project
    working_dir: /var/www/html
    command:
      - sh
      - -c
      - |
        set -e
        . /project/scripts/load-backend-env.sh
        php artisan horizon

  octane:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    env_file: .env
    depends_on: [backend]
    volumes:
      - ./backend:/var/www/html
      - .:/project
    working_dir: /var/www/html
    command:
      - sh
      - -c
      - |
        set -e
        . /project/scripts/load-backend-env.sh
        php artisan octane:start --server=roadrunner --host=0.0.0.0 --port=8001

  nginx:
    image: nginx:1.27-alpine
    depends_on: [backend, octane]
    ports:
      - "3000:80"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./backend:/var/www/html:ro
      - ./docker/nginx/index.html:/usr/share/nginx/html/index.html:ro

  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    env_file: .env
    depends_on: [backend]
    environment:
      VITE_PROXY_TARGET: http://nginx
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
    command: ["sh", "-lc", "npm install && npm run dev -- --host 0.0.0.0"]

volumes:
  pgdata:
  redisdata:
